using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WCF.BussinessController.BCL;
using WCF.BussinessObject.Objects;
using WEB_QLGD01.Models;

namespace WEB_QLGD01.Controllers
{
    public class PermissionController : Controller
    {
        // GET: Permission
        public ActionResult Index()
        {
            return View(new PermisstionBCL().GetJoin());
        }

        

        [HttpGet]
        public ActionResult Create()
        {
            List<FeaIdObject> LisFeat = new FeaIdBCL().GetAll();
            /*FeaIdObject objFeat = LisFeat.Single(x => x.FeaId.Equals(0));
            LisFeat.Remove(objFeat);*/
            ViewBag.ListFeat = LisFeat;

            List<AccountObject> lisUser = new AccountBCL().GetAll();
           /* AccountObject objAccount = lisFeat.Single(x => x.FeaId.Equals(0));
            lisFeat.Remove(objFeat);*/
            ViewBag.ListUser = lisUser;
            return View();         

        }

          [HttpPost]
         public ActionResult Create(PermisstionObject obj)
        {
            PermisstionObject objP = new PermisstionObject();
            objP.PerID = Guid.NewGuid();
            /*HttpPostedFileBase file = Request.Files[0];
            if (file.ContentLength > 0 && file.ContentType.Contains("image"))
            {
                var fileName = DateTime.Now.ToString("ddMMyyyyhhMMss") + "-" + Path.GetFileName(file.FileName);
                var path = Path.Combine(Server.MapPath("~/Content/Galleries/Lesson/Categories"), fileName);
                file.SaveAs(path);
                objLessonCategory.CategoryImage = fileName;
            }*/
            //objLessonCategory.ModifiedBy =Guid.Parse("5065268F-F180-4061-976E-BB74BAB0DC2E");
            objP.F_ADD = obj.F_ADD;
            objP.F_EDIT = obj.F_EDIT;
            objP.F_DELETE = obj.F_DELETE;
            objP.F_SEARCH = obj.F_SEARCH;
            objP.FeaId = obj.FeaId;
            objP.UserId = obj.UserId;
            new PermisstionBCL().Insert(objP);
            return RedirectToAction("Create", "Permission");

          

        }



          [HttpGet]
          public ActionResult Edit(System.Guid PerId)
          {
              PermisstionObject objPe = new PermisstionObject();
              objPe = new PermisstionBCL().GetByPerID(PerId);
              //objPe.FeaJoin = new FeaIdBCL().GetByFeaId(objPe.FeaId);
              List<FeaIdObject> LisFeat = new FeaIdBCL().GetAll();
              /*FeaIdObject objFeat = LisFeat.Single(x => x.FeaId.Equals(0));
              LisFeat.Remove(objFeat);*/
              ViewBag.ListFeat = LisFeat;

              List<AccountObject> lisUser = new AccountBCL().GetAll();
              /* AccountObject objAccount = lisFeat.Single(x => x.FeaId.Equals(0));
               lisFeat.Remove(objFeat);*/
              ViewBag.ListUser = lisUser;
              return View(objPe);       
          }

          [HttpPost]
          public ActionResult Edit(PermisstionObject model)
          {              
              new PermisstionBCL().Update(model);
              return RedirectToAction("Edit", "Permission");
          }


          [HttpPost]
          public JsonResult Permission_Delete (Guid PerId)
          {
              try
              {
                  new PermisstionBCL().Delete(PerId);
              }
              catch (Exception e)
              {
                  return Json(new { result = false, message = "Đã có lỗi xảy ra!" });
              }
              return Json(new { result = true, message = "Xóa danh mục thành công!" });
          }




    }
}