using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WCF.BussinessController.BCL;
using WCF.BussinessObject.Objects;
namespace WEB_QLGD01.Controllers
{
    public class StudentController : Controller
    {
        // GET: Student
        public ActionResult Index(string ChiTietDanhSach = "Đang theo học")
        {
            ChiTietDanhSach = TempData["ChiTietDanhSach"] != null ? TempData["ChiTietDanhSach"].ToString() : ChiTietDanhSach;
            ChiTietDanhSach = "Tất cả học viên " + ChiTietDanhSach;

            ViewBag.ChiTietDanhSach = ChiTietDanhSach;
            ViewBag.status = TempData["status"] != null ? TempData["status"] : false;
            ViewBag.start = TempData["start"] != null ? TempData["start"].ToString() : "";
            ViewBag.end = TempData["end"] != null ? TempData["end"].ToString() : "";

            var list = new StudentBCL().GetAll().Where(q => q.Status == false).ToList();
            return View(list);
        }

        public ActionResult Search(bool status, DateTime? start, DateTime? end)
        {
            string ChiTietDanhSach = (status ? "Đang theo học" : "Đã hoàn thành ");

            IEnumerable<StudentDetailtObjects> data = new StudentDetailtBCL().GetJoin().Where(q => q.StudentJoin.Status == status);
            var x = new StudentDetailtBCL().GetJoin();
            if (start.HasValue)
            {
                ChiTietDanhSach += " Từ ngày: " + start.Value.ToShortDateString();
                data = data.Where(q => q.CoursesJoin.StartDate.Value > start.Value);
            }
            if (end.HasValue)
            {
                ChiTietDanhSach += " Đến ngày: " + start.Value.ToShortDateString();
                data = data.Where(q => q.CoursesJoin.EndDate.Value < end.Value);
            }
            TempData["ChiTietDanhSach"] = ChiTietDanhSach;
            TempData["status"] = status;
            TempData["start"] = start.HasValue ? start.Value.ToShortDateString() : "";
            TempData["end"] = end.HasValue ? end.Value.ToShortDateString() : "";
            return RedirectToAction("Index", data.Select(q => q.StudentJoin));
        }

        public ActionResult Create()
        {
            return View();
        }
        // POST: Expert/Create
        [HttpPost]
        public ActionResult Create(StudentObjects objS)
        {
            objS.Deleted = false;
            objS.Status = false;
            var b = new StudentBCL().Insert(objS);
            if (b)
            {
                return RedirectToAction("Index", "Student");
            }
            else
            {
                ModelState.AddModelError("", "them moi that bai");
            }
            return View();
        }

        public ActionResult Edit(Guid id)
        {
            var obj = new StudentBCL().GetByStudetId(id);

            return View(obj);
        }

        // POST: Expert/Edit/5
        [HttpPost]
        public ActionResult Edit(StudentObjects objS)
        {
            objS.Deleted = false;
            var b = new StudentBCL().Update(objS);
            if (b)
            {
                return RedirectToAction("Index", "Student");
            }
            else
            {
                ModelState.AddModelError("", "Edit that bai");
            }

            return View();
        }

        [HttpPost]
        public ActionResult Delete(Guid ID, FormCollection collection)
        {
            return Json(new StudentBCL().Delete(ID));
        }
    }
}