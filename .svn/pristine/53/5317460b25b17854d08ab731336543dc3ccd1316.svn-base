@model WCF.BussinessObject.Objects.CoursesJournalObjects

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var selectCourse = new List<SelectListItem>();

    var data = new WCF.BussinessController.BCL.CoursesBCL().GetAll().Where(q => q.Status == false);

    foreach (var item in data)
    {
        selectCourse.Add(new SelectListItem()
        {
            Text = item.CourseId + " - " + item.CourseName,
            Value = item.CoId.ToString()
        });
    }
}
<div class="portlet box red-intense">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-plus-circle">
                Thêm nhật kí giảng dạy
            </i>
        </div>
    </div>
    <div class="portlet-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.CoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CoId, selectCourse, new { @class = "form-control", required = "required" })
                        <p>
                            @Html.ActionLink("Thêm mới Khóa học", "Create", "Courses", new { }, new { })
                        </p>
                        @Html.ValidationMessageFor(model => model.CoursesJoin.CourseName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DayOf, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DayOf, new { @class = "form-control", type = "date", required = "required", value = DateTime.Now.ToString("yyyy/MM/dd") })
                        @Html.ValidationMessageFor(model => model.DayOf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <script>
                    var now = new Date();

                    var day = ("0" + now.getDate()).slice(-2);
                    var month = ("0" + (now.getMonth() + 1)).slice(-2);

                    var today = now.getFullYear() + "-" + (month) + "-" + (day);

                    $('#DayOf').val(today);
                </script>
                <div class="form-group">
                    @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Contents, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>
