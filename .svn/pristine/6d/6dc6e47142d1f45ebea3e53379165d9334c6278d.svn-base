@model WCF.BussinessObject.Objects.CoursesObjects

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="bs-example bs-example-tabs" data-example-id="togglable-tabs">
    <ul class="nav nav-tabs" id="myTabs" role="tablist">
        <li role="presentation" class="active"><a href="#home" id="home-tab" role="tab" data-toggle="tab" aria-controls="home" aria-expanded="true">Sửa lớp học @Model.CourseId - @Model.CourseName</a></li>
        <li role="presentation" class=""><a href="#profile-hocvien" role="tab" id="profile-tab" data-toggle="tab" aria-controls="profile" aria-expanded="false">Danh sách Học viên</a></li>
        <li role="presentation" class=""><a href="#profile-giangvien" role="tab" id="profile-tab" data-toggle="tab" aria-controls="profile" aria-expanded="false">Danh sách Giảng viên</a></li>
        <li role="presentation" class=""><a href="#profile-nhatky" role="tab" id="profile-tab" data-toggle="tab" aria-controls="profile" aria-expanded="false">Nhật ký giảng dạy</a></li>
        <li role="presentation" class=""><a href="#profile-hocvienvang" role="tab" id="profile-tab" data-toggle="tab" aria-controls="profile" aria-expanded="false">Học viên vắng</a></li>
    </ul>
</div>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade active in" role="tabpanel" id="home" aria-labelledby="home-tab">
        <div class="portlet box green-haze">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-plus-circle">
                    </i>
                    <h4 style="float: left; margin: 0">Sửa lớp học @Model.CourseId - @Model.CourseName</h4>
                </div>
            </div>

            <div class="portlet-body">
                @using (Html.BeginForm())
                        {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CoId)
                        @Html.HiddenFor(model => model.Status)

                        <div class="form-group">
                            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CourseId, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.CourseName, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.TotalNumber, new { @class = "form-control", type = "number", required = "required" })
                                @Html.ValidationMessageFor(model => model.TotalNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="date" name="StartDate" id="StartDate" class="form-control" value='@Model.StartDate.Value.ToString("yyyy-MM-dd")' required="required" />
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="date" name="EndDate" id="EndDate" class="form-control" value='@Model.EndDate.Value.ToString("yyyy-MM-dd")' required="required" />
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger", type = "date" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.CheckBoxFor(model => model.Status, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success" />
                                @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                        }

            </div>
        </div>
    </div>
    <div class="tab-pane fade" role="tabpanel" id="profile-hocvien" aria-labelledby="profile-tab">
        @{
                Html.RenderAction("ListStudentByCoursesId", "StudentDetail", new { coursesId = @Model.CoId });
        }
    </div>

    <div class="tab-pane fade" role="tabpanel" id="profile-giangvien" aria-labelledby="profile-tab">
        @{
            Html.RenderAction("GetListExpertsByCoursesId", "ExpertsDetailt", new {coursesId = @Model.CoId});
        }
    </div>

    <div class="tab-pane fade" role="tabpanel" id="profile-nhatky" aria-labelledby="profile-tab">
        @{
            Html.RenderAction("GetListByCoursesId", "CoursesJournal", new { coursesId = @Model.CoId });
        }
    </div>
    <div class="tab-pane fade" role="tabpanel" id="profile-hocvienvang" aria-labelledby="profile-tab">
        @{
            Html.RenderAction("GetListStudentByCourseId", "CoursesStudentDetailt", new { coursesId = @Model.CoId });
        }
    </div>
</div>
